- name: Copy kubeadm config file
  template:
    src: "{{ playbook_dir }}/files/kubeadm-config.yml.j2"
    dest: /root/kubeadm-config.yml

- name: Initialize Kubernetes cluster
  command: "kubeadm init --config /root/kubeadm-config.yml --upload-certs"
  args:
    creates: /etc/kubernetes/admin.conf

- name: Get remote username
  set_fact:
    remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

- name: Copy kubectl config to remote users
  command: "{{ item }}"
  with_items:
    - mkdir -p /root/.kube
    - /bin/cp -rf /etc/kubernetes/admin.conf /root/.kube/config
    - chown root:root /root/.kube/config
    - mkdir -p /home/{{ remote_regular_user }}/.kube
    - /bin/cp -rf /etc/kubernetes/admin.conf /home/{{ remote_regular_user }}/.kube/config
    - chown {{ remote_regular_user }}:{{ remote_regular_user }} /home/{{ remote_regular_user }}/.kube/config

- name: Copy kubeconfig to Ansible host
  fetch:
    src: "/root/.kube/config"
    dest: "{{ playbook_dir }}/kubeconfig"
    flat: yes

- name: Copy kubeconfig to ~/.kube on Ansible host
  fetch:
    src: "/root/.kube/config"
    dest: "~/.kube/config"
    flat: yes

- name: Install Flannel to cluster
  command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  args:
    creates: /etc/cni/net.d/10-flannel.conflist

# - name: Install CoreDNS
#   command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/kubernetes/master/cluster/addons/dns/coredns/coredns.yaml

- name: Create ArgoCD namespace
  command: kubectl create namespace argocd

- name: Install ArgoCD
  command: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml